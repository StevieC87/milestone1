<%- include('./includes/head.ejs') %>
<!-- <script src="https://unpkg.com/axios/dist/axios.min.js"></script> -->
</head>

<style> 

.icircle {
    background: #EEE;
    color: #000;
    padding: 4px 20px;
    border-radius: 50%;
    font-size: 35px;
    height: 60px;
    width: 60px;
}
.icircle:hover {
    background: blue;

}
.icircleselected {
    background: blue;
}
</style>
<body>
  
<%- include('./includes/nav.ejs') %>


<!-- BECAUSE I WANT TO PASS OTHER DATA, FOR EXAMPLE THE ARRAY WITH MATCHIGN WORDS
IM NOT GONNA CREATE A HIDDEN FIELD FROM IT, BUT RATHER SEND ALL THE STUFF AND THE 'FORM' PGROAMMATICALLY 
LIKE FETCH, BUT WITHOUT ASYNC 
SO subimt a form wth post request in js -->

<form action="/newgamepost" method="POST">
    <h1 class="centertxt">Pick a word</h1>
   <!--  <label for="word"></label> -->
    <div class="flexcenter">
        <a class="btn btn-primary centertxt" id="generatewordbutton">Suggest</a>
    </div>
    <div  >
        
        <div class="flexcenter"  id="word" style="height: 70px; font-size: 18pt;"></div>
    </div>
    
    <!-- <input type="text" id="word" > -->

    <div id="pickcentreletterloop" class="flexcenter">


    </div>
    <input type="hidden" name="hiddencentreletter" id="hiddencentreletter" value=""> 
    <input type="hidden" name="hiddenword" id="hiddenword" value="">
    <input type="hidden" name="hiddenwords" id="hiddenwords" value="">
    <input type="hidden" name="hiddenarrayremaining" id="hiddenarrayremaining" value="">

    <h2 class="centertxt">Pick the Center Letter</h2>
    <div class="flexcenter centertxt"  id="looplettersdiv">

    </div>
  <!--   <span class="icircle">i</span>
     -->

    <label for="centre letter">Pick the centre letter</label>
    <input type="radio" name="centreletter" value="1">1
    <div id="show total matches"></div>
    <div id="showmatchtotal">

    </div>
  
    <div class="flexcenter">
        <!-- <a class="btn btn-primary centertxt" id="generatewordbutton">Confirm</a> -->
        <input type="submit" value="Confirm" class="btn btn-primary centertxt" id="generatewordbutton">   
    </div>

    <div class="container">
        <div class="row">
          <div class="col" id="wordlistresults"  class="wordlistresults">
            Column
          </div>
          <div class="col">
            Column
          </div>
        </div>
      </div>
</form>

<script>
  let indexloop = 0;
  let wordwechose = '';
  let worduniqueletters = '';
  let centerletterwechose = '';
  let arrayofuniqueletters = [];
  let minusourletter = [];
document.querySelector('#generatewordbutton').addEventListener('click', async callback => {
   
    // SENDS GET REQUEST TO GET A RANDOM WORD
   await fetch('/getwordsgenerate')
   .then(response => response.json())
   .then(data => {
      console.log(data);
      document.querySelector('#word').textContent = data.word.randomWord;
      wordwechose = data.word.randomWord;
      console.log(indexloop,'indexloop');
      worduniqueletters = data.word.uniqueStr;
      arrayofuniqueletters = data.word.arrayofuniqueletters;
      console.log(worduniqueletters);
      console.log(data.word.arrayofuniqueletters,'arrayofuniqueletters');
      let parentappend = document.querySelector('#looplettersdiv');
    
      if(indexloop > 0) {
            document.querySelectorAll('.icircle').forEach(circle => {
        //alert(circle.id);
            let divtodelete = document.querySelector(`#${circle.id}`);
            let parentappend = document.querySelector('#looplettersdiv');
            parentappend.removeChild(divtodelete);
            })
        }
      arrayofuniqueletters.forEach((letter, index) => {
            
            //test other way 
        
        console.log(letter, index);
            let spanmake = document.createElement("span");
            spanmake.className = "icircle";
            spanmake.id = letter;
            // styled.setAttribute('style', 'color: red');
            spanmake.appendChild(document.createTextNode(letter.toUpperCase()));          

            parentappend.appendChild(spanmake);
            
          
        });
        indexloop++;
        console.log(indexloop, 'indexloop');
      
    })
    .then(after => {
        
    })
console.log(wordwechose);

document.querySelector('#hiddenword').value = wordwechose;

  
});

document.querySelector('#looplettersdiv').addEventListener('click', async callback => {
    
    let input = event.target;
    let inputid = event.target.id;
  
    
    centerletterwechose = inputid;
    if(inputid.length > 1) {


    }
    else {

        document.querySelector('#hiddencentreletter').value = inputid;
    //maybe get list of other letters, and remove the class of blue if it exists
        console.log(wordwechose,'wordwechose');
        let ourwordarray = worduniqueletters.split('');
        console.log(ourwordarray, 'ourwordarray');
        minusourletter = ourwordarray.filter(letter => letter !== inputid);
        console.log(minusourletter, 'minusourletter');
        document.querySelector('#hiddenarrayremaining').value = minusourletter; //arrayofuniqueletters

        let removeblues = minusourletter.forEach(letter => {
            let divtoedit = document.querySelector(`#${letter}`);
            divtoedit.classList.remove("icircleselected");
        // let divtodelete = document.querySelector(`#${letter}`);
        //  divtodelete.classList.remove('icircleselected');
        })

        let inputtagname = event.target.tagName; 
        let mix = '#' + inputid;
    // console.log(input.id, 'input');
    
        //find letters to remove circle selected, before putting it to our one


        /* document.querySelectorAll('.icircle icircleselected').forEach(circleword => {
        // circleword.className = 'icircle';
        circleword.textContent = 'icircle';
            console.log(circleword, 'circleword');
        }); */
    document.getElementById(inputid).className = 'icircle icircleselected';
    
    

        if(inputtagname !== 'SPAN'){
            return;
        }
        else{
            const getsimilarwords = await fetch(`/getwordswithcenterletter?word=${wordwechose}&centerletter=${inputid}`)
            .then(response => response.json())
            .then(data => {
                console.log(data)
                console.log(data.wordlistnew.newarray.length, 'length');
                document.querySelector('#showmatchtotal').textContent = `${data.wordlistnew.newarray.length} matches`;
                document.querySelector('#hiddenwords').value = data.wordlistnew.newarray;
               
                    //DELETE EXISTING BADGES TO REPLACE THEM
                    document.querySelectorAll('.badge').forEach(badge => {
                    // console.log('found badge');
                    let divtodelete = document.querySelector(`#${badge.id}`);
                    // console.log(divtodelete, 'divtodelete');
                    let parentappend = document.querySelector('#wordlistresults');
                    parentappend.removeChild(divtodelete);
                    })
                
                data.wordlistnew.newarray.forEach((word, index) => {
                    console.log(word, index);
                    let parentappend2 = document.querySelector('#wordlistresults');
                    let spanmake = document.createElement("span");
                    spanmake.className = "badge rounded-pill bg-primary";
                    spanmake.id = word;

                    // styled.setAttribute('style', 'color: red');
                    spanmake.appendChild(document.createTextNode(word));          
                // spanmake.appendChild(document.createElement('p'));  
                    parentappend2.appendChild(spanmake);
                    //BUT IF CLICK AGAIN REMOVE PREVIOUS 
                });
          
               
            })
            .then(after => {
                console.log('after');
            })
        }
    }
});
 
/* data.wordlistnew.newarray.forEach((word, index) => {
            //but now test: frequency ordering
            await fetch(`/https://api.datamuse.com/words?ml=${word}&md=f`)
            .then(response => response.json())
            .then(data => {
                console.log(data);
            });
            
 */
</script>









<%- include('./includes/footer.ejs') %>

</body>

</html>