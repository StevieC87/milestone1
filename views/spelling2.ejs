<%- include('./includes/head.ejs') %>
</head>

<body>
<%- include('./includes/nav.ejs') %>

<style>
    /* .outerdiv {
    position: relative;
    width: 100%;
    } */
    .outerdiv {
        width: 320px;
        height: 340px;
    }
    .gridouter {
        display: flex;
		justify-content: center;
        flex-direction: column;
        position: relative;
        width: 320px;
      
       
    }
    .external {

    }
    .svg {
        position: absolute;
        width: 120px;
        height: 104px;
    }
  /*   .polygon:active {
        transition: transform 0.3s;
        transform: scale(0.9, 0.9);
        /(30px, 3px, 5);
    } */
    .polygon {
    
    }
    .clicktransform {
        transition: transform 0.3s;
        transform: scale(0.9, 0.9);
       
        /* //(30px, 3px, 5); */
    }
    .clicktransformtest {
        color: purple;
        background: yellow;
        text-decoration: line-through;
        transition: all 0.2s;
        transform: scale(0.9, 0.9);
    }
    .animate {
        
        animation-name: scaleanimation;
		animation-duration: 0.2s;
    }
    @keyframes scaleanimation {
		/* now anyrules we add here will apply to animation-name: square element */
		/* 0% {transform: rotatex(20deg);}
		25% {transform: rotateY(160deg);}
	    50% {transform: rotateY(200deg);}
		75% {transform: rotateY(240deg);}
		100% {transform: rotateY(360deg);} */
        0% {
            transform-origin: center;
            transform: scale(1,1);
        }
		25% {
            transform-origin: center;
            transform: scale(0.95,0.95);}
	    50% {
            transform-origin: center;
            transform: scale(0.9,0.9);}
		75% {
            transform-origin: center;
            transform: scale(0.95,0.95);}
		100% {
            transform-origin: center;
            transform:scale(1,1)}
    }
    .letterstype {
        text-align: center;
        font-size: 20pt;
        font-weight: bold;
        max-width: 320px; 
        height: 60px;
    }

    .letter{
        font-size: 20pt;
        transform: translate(-8px);
        font-weight: bold;
    }
   /*  .svgg {
        height: 400px;
        width: 400px;
    } */
    .center {
       fill: #F6D921;

    }
    .outer {
        fill: #E6E6E6;
        
    }

    /* 93 down */
    .svg:nth-child(1) {
    transform: translate(82%, 115%);
    /* transform: translate(50%, 50%); */
    }
    .svg:nth-child(2) {
    transform: translate(160%, 64%);
    /* 0 */
    }
    .svg:nth-child(3) {
    transform: translate(160%, 167%);
    /* 127%, 103% */
    }
    .svg:nth-child(4) {
    transform: translate(82%, 218%);
    /* 50%, 153% */
    }
    .svg:nth-child(5) {
    transform: translate(4%, 166%);
    
    }
    .svg:nth-child(6) {
    transform: translate(4%, 64%);
    }
    .svg:nth-child(7) {
    transform: translate(82%, 12%);
    /* -54 */
    }
    .letternoselect {
        user-select: none; 
    }
    .buttonsdiv {
        display: flex;
        justify-content: center;
        flex-direction: row;
       /*  position: relative;
        top: -20px; */
    }
    .buttonsdivmini {
        width: 200px;
        display: flex;
        justify-content: space-between;
    }
    .reloadb {
        border-radius: 50%;
        width: 38px;
        height: 38px;
        text-align: center;
    }
    .reloadb > i {
        margin-left:-2px;
        margin-top: 4px;
    }
    .btn-outline-secondary {
        border: 1px solid rgba(228, 228, 228, 0.822) !important;
        font-size: 12pt;
        font-weight: regular;
        font: Courier New;
    }

    .pointerline {
        color: #f6d921;
       
        animation-name: pointer;
     /*    animation-delay: 2s; */
        animation-duration: 1.5s;
        animation-iteration-count: infinite;
        animation-timing-function: ease-out;
        font-size: 32pt;
    }
    @keyframes pointer {
        0% {
            opacity: 1;
        }
        45% {
            opacity: 1;
        }
        46%{
            opacity: 0;
        }
        85% {
            opacity: 0;
        }
        91%{
            opacity: 1;
        }
        100% {
            opacity: 1;
        }
    }
    /* .deleteb, .enterb */
</style>
<!--  word 
 centerletter


centerletter

wordarray  -->
 <!-- allmatchingwordsa  -->
 <!-- wordarray -->




<script>
    const wordarray = '<%=wordarray%>';
    //const chars = word.split('');
   // console.log(chars);
   // document.getElementById('test').innerHTML = chars1;
/*   */
</script>
<div id="test"></div>
<div class="gridouter">
    <div id="letterstype" class="letterstype">
        <!-- <span>TYPE LETTERS HERE</span> -->
<!--         <span id="pointerline" class="pointerline" style="font-size: 26pt; color: #f6d921">|</span> -->
        <span id="pointerline" class="pointerline"><i class="fa-regular fa-pipe">|</i></span>
        
    </div> <!-- letterstype -->

    <div class="outerdiv">
        <svg class="svg" id="svg9"> <!--  width="400" height="180" -->
            <polygon id="p9" class="polygon center"  points="0,51 30,0 90,0 120,51.9 90,103.9 30,103.9"></polygon>
            <text id="outerletter9" class="letter lettercentre letternoselect" x="50%" y="50%" dy="0.35em"><%=centerletter.toUpperCase()%></text>
        </svg>
        <svg class="svg" id="svg0"> <!--  width="400" height="180" -->
            <polygon id="p0" class="polygon outer"  points="0,51 30,0 90,0 120,51.9 90,103.9 30,103.9" ></polygon>
            <text id="outerletter0" id="centerletter" class="letter letterouter letternoselect" x="50%" y="50%" dy="0.35em"><%=wordarray[0].toUpperCase()%></text>
        </svg>
        <svg class="svg" id="svg1"> <!--  width="400" height="180" -->
            <polygon id="p1" class="polygon outer"  points="0,51 30,0 90,0 120,51.9 90,103.9 30,103.9" ></polygon>
            <text id="outerletter1" class="letter letterouter letternoselect" x="50%" y="50%" dy="0.35em"><%=wordarray[1].toUpperCase()%></text>
        </svg>
        <svg class="svg" id="svg2"> <!--  width="400" height="180" -->
            <polygon id="p2"  class="polygon outer"  points="0,51 30,0 90,0 120,51.9 90,103.9 30,103.9" ></polygon>
            <text id="outerletter2" class="letter letterouter letternoselect" x="50%" y="50%" dy="0.35em" ><%=wordarray[2].toUpperCase()%></text>
        </svg>
        <svg class="svg" id="svg3"> <!--  width="400" height="180" -->
            <polygon id="p3"  class="polygon outer"  points="0,51 30,0 90,0 120,51.9 90,103.9 30,103.9" ></polygon>
            <text id="outerletter3" class="letter letterouter letternoselect" x="50%" y="50%" dy="0.35em"><%=wordarray[3].toUpperCase()%></text>
        </svg>
        <svg class="svg" id="svg4"> <!--  width="400" height="180" -->
            <polygon id="p4" class="polygon outer"  points="0,51 30,0 90,0 120,51.9 90,103.9 30,103.9" ></polygon>
            <text id="outerletter4" class="letter letterouter letternoselect" x="50%" y="50%" dy="0.35em"><%=wordarray[4].toUpperCase()%></text>
        </svg>
        <svg class="svg" id="svg5"> <!--  width="400" height="180" -->
            <polygon id="p5" class="polygon outer"  points="0,51 30,0 90,0 120,51.9 90,103.9 30,103.9" ></polygon>
            <text id="outerletter5" class="letter letterouter letternoselect" x="50%" y="50%" dy="0.35em"><%=wordarray[5].toUpperCase()%></text>
        </svg>
        
        
    </div> <!-- outerdiv -->
    <div id="buttonsdiv" class="buttonsdiv">
        <div class="buttonsdivmini" id="buttonsdivmini">
        <a href="" id="deleteb" class="btn btn-outline-secondary deleteb">Delete</a>
        <a id="shuffle" href="" class="btn btn-outline-secondary reloadb">
            <i class="fa-solid fa-rotate"></i></a>
        <a href="" id="enterb" class="btn btn-outline-secondary enterb">Enter</a>
    </div>
    </div>   <!-- buttonsdiv -->
</div> <!-- gridouter -->

<!-- <div class="outerdiv gridouter">
    <svg class="svg" id="svg9"> 
        <polygon id="p9" class="polygon center"  points="0,51 30,0 90,0 120,51.9 90,103.9 30,103.9" ></polygon>
        <text id="outerletter9" class="letter lettercentre letternoselect" x="50%" y="50%" dy="0.35em"><%=centerletter.toUpperCase()%></text>
    </svg>
    <svg class="svg" id="svg0">  
        <polygon id="p0" class="polygon outer"  points="0,51 30,0 90,0 120,51.9 90,103.9 30,103.9" ></polygon>
        <text id="outerletter0" id="centerletter" class="letter letterouter letternoselect" x="50%" y="50%" dy="0.35em"><%=wordarray[0].toUpperCase()%></text>
    </svg>
    <svg class="svg" id="svg1"> 
        <polygon id="p1" class="polygon outer"  points="0,51 30,0 90,0 120,51.9 90,103.9 30,103.9" ></polygon>
        <text id="outerletter1" class="letter letterouter letternoselect" x="50%" y="50%" dy="0.35em"><%=wordarray[1].toUpperCase()%></text>
    </svg>
    <svg class="svg" id="svg2"> 
        <polygon id="p2"  class="polygon outer"  points="0,51 30,0 90,0 120,51.9 90,103.9 30,103.9" ></polygon>
        <text id="outerletter2" class="letter letterouter letternoselect" x="50%" y="50%" dy="0.35em" ><%=wordarray[2].toUpperCase()%></text>
    </svg>
    <svg class="svg" id="svg3"> 
        <polygon id="p3"  class="polygon outer"  points="0,51 30,0 90,0 120,51.9 90,103.9 30,103.9" ></polygon>
        <text id="outerletter3" class="letter letterouter letternoselect" x="50%" y="50%" dy="0.35em"><%=wordarray[3].toUpperCase()%></text>
    </svg>
    <svg class="svg" id="svg4"> 
        <polygon id="p4" class="polygon outer"  points="0,51 30,0 90,0 120,51.9 90,103.9 30,103.9" ></polygon>
        <text id="outerletter4" class="letter letterouter letternoselect" x="50%" y="50%" dy="0.35em"><%=wordarray[4].toUpperCase()%></text>
    </svg>
    <svg class="svg" id="svg5"> 
        <polygon id="p5" class="polygon outer"  points="0,51 30,0 90,0 120,51.9 90,103.9 30,103.9" ></polygon>
        <text id="outerletter5" class="letter letterouter letternoselect" x="50%" y="50%" dy="0.35em"><%=wordarray[5].toUpperCase()%></text>
    </svg>
    
    
</div> -->
<!-- <svg width="400" height="180">
    <rect x="80" y="20" width="150" height="150" style="fill:blue;stroke:pink;stroke-width:5;fill-opacity:0.1;stroke-opacity:0.9" />
    Sorry, your browser does not support inline SVG.  
  </svg> -->


  <!-- <div class="gridouter">
        <div class="external" > --><!-- style="height: 400px; width: 400px" -->

                            <!--             <polygon points="25 0,75 0,100 50, 75 100, 25 100, 0 50" style="fill:lightgray;stroke:purple;stroke-width:0" /> -->
     <!-- class="cell-fill" -->
                            <!--  <polygon class="hegaxon center" points="0,51.96152422706631 30,0 90,0 120,51.96152422706631 90,103.92304845413263 30,103.92304845413263" ></polygon> -->
<!--        
    

        </div>
</div> -->

<script>
    console.log('<%= allmatchingwordsa %>', 'ALL MATCHING WOOOOOOORDS!');
 // console.log(existingword1,'existingword1');
 //   console.log(object);
    console.log('<%= wordarray %>', 'word array ');

function checkword(word) {
 
}

function shuffle(array) {
    let currentIndex = array.length,  randomIndex;
    event.preventDefault();
    // While there remain elements to shuffle.
    while (currentIndex != 0) {

        // Pick a remaining element.
        randomIndex = Math.floor(Math.random() * currentIndex);
        currentIndex--;

        // And swap it with the current element.
        [array[currentIndex], array[randomIndex]] = [
        array[randomIndex], array[currentIndex]];
    }

    return array;
    }
document.querySelector('#shuffle').addEventListener('click', e => {
    
     let existingword1 = '<%= wordarray %>';
    console.log('<%= wordarray %>','existingword1');
    const existingwordtoarray = existingword1.split(',');
    let newarray = shuffle(existingwordtoarray);

    let lettersinpage = document.querySelectorAll('.letterouter');
    newarray.forEach(function(letter1, index) {

        document.querySelector(`#outerletter${index}`).textContent = letter1.toUpperCase();
    });

    e.preventDefault();
})

/* document.querySelector('#shuffle').addEventListener('click', e => {

}); */


</script>
<script>
    //otherwise try with docum,ent click event listener
  /*    document.querySelector('polygon').addEventListener('click', e => {
        alert('hello');
        console.log('asdfladjflka');
        let polygonindex = e.target.id;
        polygonindex.ClassList.add('clicktransform');
    }) */

    document.addEventListener('click', e => {
        console.log(e, 'event');
        console.log(e.target.tagName, 'e.target.tagName');
        console.log(e.target.id, 'e.target.id');
        let clicktag = e.target.tagName;
        let clickclass = e.target.classList;
        let clickid = e.target.id; 
        let getnumberindex = clickid[clickid.length -1]
       //this is also the array index
        //now if we click on polygon
        let clickidconcat = '#' + clickid;
      //   if(clicktag == 'polygon' || clicktag == 'TEXT'){
        if(clicktag == 'polygon' || clickclass.contains('letter')){
                console.log('clicked', clicktag);
       
           let effecttarget =  document.querySelector(`#p${getnumberindex}`);

            let newnumberonly = clickid.charAt(clickid.length-1);
            effecttarget.classList.add('animate');
            let wait = setTimeout(() => {
                effecttarget.classList.remove('animate');
            }, 300);   
          
           let letterindex = `outerletter${newnumberonly}`;
           let letterindextexttag = document.querySelector(`#${letterindex}`);
           let leterindextexttagLetter = letterindextexttag.textContent;
         
        let targetbox = document.querySelector('#letterstype');
  //      let targetboxAddletter = targetbox.textContent = leterindextexttagLetter;
    //    let targetboxtext = targetbox.textContent;

            let spanmake = document.createElement('span');
            spanmake.textContent = leterindextexttagLetter;
            let parent = targetbox;
            const pointerline = document.querySelector('#pointerline');
            pointerline.before(spanmake);
           // parent.appendChild(spanmake);

    //    document.querySelector('#outerletter'+newnumberonly).classList.add('animate');
//works   document.querySelector('#outerletter'+newnumberonly).classList.add('clicktransformtest');
            //now we need to get the letter from the array
        } //  document.querySelector
    })

    document.querySelector('#deleteb').addEventListener('click', e => {
        event.preventDefault();
        let lettersboxis =  document.querySelector('#letterstype');
       //we want to delete last span which is letter
       //we might have last span always defa
        //grab all 
        let lettersinbox = document.querySelectorAll('#letterstype span');

        lettersinbox[lettersinbox.length-2].remove();
        
        
        let newarray1 = [];
        lettersinbox.forEach(function(letter1, index) {
           
           // newarray1.push(letter1.textContent);
        });

       let wordfromarray = newarray1.join();
       const wordfromarray1 = wordfromarray.replaceAll(',', '');

        lettersboxis.prepend

        console.log(newarray1, 'newarray1');
        console.log(wordfromarray1, 'wordfromarray');
        //let lettersinboxlength = lettersinbox.length;

       
    }
    )
    

</script>